version: "3"

services:
  db:
    build:
      context: "./db"
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - nats-data:/var/lib/mysql
    ports:
      - "3306:3306"
      
  nats:
    image: nats-streaming:latest
    restart: always
    depends_on:
      - db
    command: -m 8222 --store SQL --sql_driver mysql --sql_source "root:pwd@tcp(db:3306)/nss_db"
    ports:
      - "4222:4222"
      - "8222:8222"
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  loki:
    image: grafana/loki:2.0.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.0.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
  
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./build/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./build/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./build/grafana/basic_monitoring.json:/etc/grafana/provisioning/dashboards/basic_monitoring.json
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
  
  prometheus:
    image: prom/prometheus:v2.25.0
    ports:
      - 9000:9090
    volumes:
      - ./build/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  
  order:
    build:
      context: ./order
      dockerfile: Dockerfile
    restart: always
    ports: 
      - "3030:3030"
    environment: 
      - JAEGER_SERVICE_NAME=order-service
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    depends_on:
      - db
      - nats
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'
        loki-external-labels: service=order,owner=zeihan,environment=development

  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile
    restart: always
    ports: 
      - "3031:3031"
    environment: 
      - JAEGER_SERVICE_NAME=payment-service
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    depends_on:
      - db
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'
        loki-external-labels: service=payment,owner=zeihan,environment=development

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    restart: always
    environment: 
      - NATS_SUBJECT=purchase.order
      - JAEGER_SERVICE_NAME=order-worker
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    ports: 
      - "3131:3131"
    depends_on:
      - db
      - nats
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/api/prom/push'
        loki-external-labels: service=worker,owner=zeihan,environment=development

volumes:
  nats-data:
  grafana-storage:
  prometheus-data: